#!/usr/bin/env bash

# Usage:
#
#     $ bin/compile <build-dir> <cache-dir> <env-path>

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BUILDPACK_DIR=`cd $(dirname $0); cd ..; pwd`

VENDOR_DIR=$BUILD_DIR/vendor
mkdir -p $VENDOR_DIR

# Download and install Google Cloud SDK
wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.zip -qO /tmp/google-cloud-sdk.zip
unzip -qd $VENDOR_DIR /tmp/google-cloud-sdk.zip
$VENDOR_DIR/google-cloud-sdk/install.sh --usage-reporting=false --path-update=false --bash-completion=false
rm -rf /tmp/google-cloud-sdk.zip

# Copy .profile.d script for configuring gcloud
mkdir -p $BUILD_DIR/.profile.d
cp $BUILDPACK_DIR/profile.d/heroku-google-cloud.sh $BUILD_DIR/.profile.d

# Add gcloud to PATH
export PATH=$VENDOR_DIR/google-cloud-sdk/bin:$PATH

# Install kubectl
if [ -r "$ENV_DIR/INSTALL_KUBECTL" ]; then
    INSTALL_KUBECTL="$(cat "$ENV_DIR/INSTALL_KUBECTL")"
    if [ $INSTALL_KUBECTL == "true" ]; then
        gcloud components install kubectl --quiet
    fi
fi


if [ -r "$ENV_DIR/CLUSTER_NAME" ]; then
    CLUSTER_NAME="$(cat "$ENV_DIR/CLUSTER_NAME")"
    export GOOGLE_APPLICATION_CREDENTIALS='/app/google-credentials.json'
    echo "$GOOGLE_CREDENTIALS" | base64 -d > $GOOGLE_APPLICATION_CREDENTIALS
    gcloud auth activate-service-account --key-file /app/google-credentials.json
    gcloud container clusters get-credentials $CLUSTER_NAME
fi

rm -rf $VENDOR_DIR/google-cloud-sdk/.install/
